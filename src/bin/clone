#!/bin/sh

set -e
unset CDPATH
unset IFS

show_usage() {
    cat <<EOT
Usage: $(basename "$0") <GITHUB-REPOSITORY-URL>

Clones a Github repository to <VENDOR_PATH>/<USER>/<REPOSITORY>
EOT
}

filter_github_repo_url_path() {
    # Extracts the user/repository part of a github.com/vendor/name url
    github_repo_url_path="$(echo "$1" | \
        grep "^https\?://github\.com/[a-zA-Z0-9_][a-zA-Z0-9_-]*/[a-zA-Z0-9_][a-zA-Z0-9_-\/]*\(\.git\)\?$" | \
        sed -e 's/^https\?\:\/\/github\.com\///' |\
        sed -e 's/\.git$//'\
    )"

    echo "$github_repo_url_path"
}

check_repositories_path() {
    if test -z "$VENDOR_PATH"; then
        echo >&2 "$(basename "$0"): VENDOR_PATH is not set"
        exit 1
    fi

    if test ! -d "$VENDOR_PATH"; then
        echo >&2 "$(basename "$0"): VENDOR_PATH is not a directory"
        exit 1
    fi
}

test "$#" = 0 && show_usage && exit 0

check_repositories_path()

if test -z "$1"; then
    echo >&2 "$(basename "$0"): <USER>/<REPOSITORY> can't be blank"
    exit 1
fi

GITHUB_REPO_URL_PATH="$(filter_github_repo_url_path "$1")"

if test -z "$GITHUB_REPO_URL_PATH"; then
    echo >&2 "$(basename "$0"): malformed <GITHUB-REPOSITORY-URL>"
    exit 1
fi

REPO_PATH="$VENDOR_PATH/$GITHUB_REPO_URL_PATH"

if test -d "$REPO_PATH"; then
    echo >&2 "$(basename "$0"): repository already exists: $REPO_PATH"
    exit 1
fi

mkdir -p "$REPO_PATH"

git clone -v "$1" "$REPO_PATH"
