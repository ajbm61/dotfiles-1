#!/bin/sh

set -e
unset CDPATH
unset IFS
readonly SOURCE="$(readlink -nf "$0")"
readonly SOURCE_PATH="$(dirname "$SOURCE")"

is_wsl() {
    grep -q Microsoft /proc/version
}

create_home_dir_symlink() {
    target="$1"
    target_basename="$(basename "$target")"

    if test "$target_basename" = "."; then
        continue
    fi

    if test "$target_basename" = ".."; then
        continue
    fi

    if test "$HOME/$target_basename" = "$SOURCE_PATH"; then
        echo >&2 "$0:create_home_dir_symlink() cannot link to self"
        exit 1
    fi

    if is_wsl; then
        from="${target#$HOME\/.dotfiles/}"
    else
        from="./${target#$HOME/}"
    fi

    to="$HOME/$target_basename"

    if test -L "$to" -o ! -e "$to"; then
        if is_wsl; then
            # Yeah, WSL.
            if test -L "$to"; then
                rm -v "$to"
            fi
            cp -r "$from" "$to"
        else
            ln -sfnv "$from" "$to"
        fi
    else
        echo >&2 "=> NOTICE Could not create home directory symlink."
        echo >&2 "          File alreay exists {target: \"$from\", name: \"$to\"}."
        echo >&2 "          Move the existing file and rerun the install script."
    fi
}

cd "$SOURCE_PATH"
echo "command: cd $SOURCE_PATH"

SKIP_DEPS=
SKIP_SUBMODULES=
UPDATE_SUBMODULES=
while test "$#" != 0; do
    case "$1" in
        --skip-dep*) SKIP_DEPS=true ;;
        --skip-sub*) SKIP_SUBMODULES=true ;;
        --update-sub*) UPDATE_SUBMODULES=true ;;
        --) shift; break ;; # standard end of options list
        -*) echo >&2 "$0: unknown option '$1'"; exit 1 ;;
        *) echo >&2 "$0: unknown argument '$1'"; exit 1 ;;
    esac
    shift
done

if test -z "$SKIP_DEPS"; then
    echo "install dependencies..."

    command -v ctags >/dev/null 2>&1 || sudo apt-get install exuberant-ctags
    command -v figlet >/dev/null 2>&1 || sudo apt-get install figlet
    command -v flake8 >/dev/null 2>&1 || sudo apt-get install python-flake8
    command -v git >/dev/null 2>&1 || sudo apt-get install git
    command -v gitk >/dev/null 2>&1 || sudo apt-get install gitk
    command -v netstat >/dev/null 2>&1 || sudo apt-get install net-tools
    command -v pip3 >/dev/null 2>&1 || sudo apt-get install python3-pip
    command -v rename >/dev/null 2>&1 || sudo apt-get install rename
    command -v tmux >/dev/null 2>&1 || sudo apt-get install tmux
    command -v tree >/dev/null 2>&1 || sudo apt-get install tree
    command -v xclip >/dev/null 2>&1 || sudo apt-get install xclip

    if ! is_wsl; then
        echo "install non-WSL dependencies..."
        command -v dconf-editor >/dev/null 2>&1 || sudo apt-get install dconf-tools
        command -v firefox >/dev/null 2>&1 || sudo apt-get install firefox firefox-locale-en
        command -v gimp >/dev/null 2>&1 || sudo apt-get install gimp
        command -v vim.gtk >/dev/null 2>&1 || sudo apt-get install vim-gtk
    fi

    # Required for Git interactive.singlekey to work. See https://superuser.com/a/817688.
    dpkg -l | grep libterm-readkey-perl >/dev/null 2>&1 || sudo apt-get install libterm-readkey-perl

    # Fonts.
    dpkg -l | grep fonts-firacode >/dev/null 2>&1 || sudo apt-get install fonts-firacode
    # dpkg -l | grep fonts-inconsolata >/dev/null 2>&1 || sudo apt-get install fonts-inconsolata
    # dpkg -l | grep ttf-anonymous-pro >/dev/null 2>&1 || sudo apt-get install ttf-anonymous-pro
    # NOTE: The following fonts need to be manually installed:
    # * Hasklig (Source Code Pro font with ligatures) https://github.com/i-tu/Hasklig
    # * Monoid (lagature font) https://github.com/larsenwork/monoid
fi

if test -z "$SKIP_SUBMODULES"; then
    echo "installing submodules..."
    git submodule init
    git submodule update
fi

if test -n "$UPDATE_SUBMODULES"; then
    echo "updating submodules..."
    git submodule foreach 'git fetch && git merge --ff-only origin/master'
fi

echo "configure symlinks..."

for file in "$SOURCE_PATH/src/".*; do
    create_home_dir_symlink "$file"
done

for file in "$SOURCE_PATH"/src/*; do
    create_home_dir_symlink "$file"
done

ln -sfv ~/.dotfiles/vendor/paulirish/git-open/git-open ~/bin/git-open
ln -sfv ~/.dotfiles/vendor/php-build/php-build/bin/php-build  ~/bin/php-build

# TODO esnure symlink for ~/.config/nvim -> ../.vim

mkdir -p ~/.rbenv/plugins
touch ~/.rbenv/plugins/ruby-build
rm ~/.rbenv/plugins/ruby-build
ln -sfv ~/.dotfiles/vendor/rbenv/ruby-build ~/.rbenv/plugins/ruby-build

if test -f ~/.dotfiles-private/install; then
    ~/.dotfiles-private/install
fi

# Composer
composer config --global notify-on-install false
composer config --global github-expose-hostname false
# composer global require friendsofphp/php-cs-fixer
# TODO composer global require phan/phan (requires apt-get install php-ast)
